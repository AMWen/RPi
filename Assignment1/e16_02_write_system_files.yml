write_files:
  - content: |
      country=US
      ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
      update_config=1
      network={
        ssid=“woopingcough”
        psk=“blacklake311”
      }
    path: /etc/wpa_supplicant/wpa_supplicant.conf
  - content: |
      allow-hotplug wlan0
      iface wlan0 inet dhcp
          wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf
      iface default inet dhcp
    path: /etc/network/interfaces.d/wlan0
    permissions: '0644'
    owner: 'root:root'
  - content: |
      e16dev
    path: /etc/hostname
    permissions: '0644'
    owner: 'root:root'
  - content: |
      # Your system has configured 'manage_etc_hosts' as True.
      # As a result, if you wish for changes to this file to persist
      # then you will need to either
      # a.) make changes to the master file in /etc/cloud/templates/hosts.tmpl
      # b.) change or remove the value of 'manage_etc_hosts' in
      #     /etc/cloud/cloud.cfg or cloud-config from user-data
      #
      127.0.1.1 e16dev
      127.0.0.1 localhost
      
      # The following lines are desirable for IPv6 capable hosts
      ::1 ip6-localhost ip6-loopback
      fe00::0 ip6-localnet
      ff00::0 ip6-mcastprefix
      ff02::1 ip6-allnodes
      ff02::2 ip6-allrouters
      ff02::3 ip6-allhosts
      
    path: /etc/hosts
    permissions: '0644'
    owner: 'root:root'
  - content: |
      #!/bin/sh
      HOST_SN=`cat /proc/cpuinfo | grep Serial | cut -d ' ' -f 2 | sed s/^0*// |tr '[:lower:]' '[:upper:]'`
      DEC=`echo $((0x${HOST_SN}))`
      DEVICE_ID=`/sbin/ifconfig eth0 | /bin/grep ether | /usr/bin/awk '{print $2}'`
      HOST_NAME=`/bin/hostname`
      echo "$HOST_NAME","0x$HOST_SN","0d$DEC","$DEVICE_ID"
    path: /usr/local/bin/e16-info
    permissions: '0555'
    owner: 'root:root'
  - content: |
      ping_time=`/bin/ping -D -c 1 10.8.0.1 | grep ']' | cut -d ']' -f 1 | cut -d '[' -f 2 | cut -d '.' -f 1`
      if [ -z "$ping_time" ]; then
         exit
      fi
      /bin/echo $ping_time > /var/log/lastVpnCheck
    path: /usr/local/bin/e16-vpnping
    permissions: '0555'
    owner: 'root:root'
  - content: |
      #!/bin/bash
      # How many minutes to allow to pass before rebooting the machine?
      MAX_MINUTES_RESTART_VPN=60  #1 hours
      MAX_MINUTES_RESTART_PI=1440 #24 hours
      
      # How many minutes of warning (broadcast to logged in users) before actual reboot?
      MINUTES_OF_WARNING_BEFORE_REBOOT=2
      
      # Obtain the time when this script was last touched
      t_last_touch=`cat /var/log/lastVpnCheck`
      if [ $t_last_touch == "" ]; then
          t_last_touch=0
      fi
      
      t_now=`date +%s`
      
      # Calculate the difference in seconds between
      # the current time and the time of the last touch
      let t_diff_sec=$(( $t_now - $t_last_touch ))
      
      
      # Calculate the difference in minutes
      let t_diff_min=$(( $t_diff_sec / 60 ))
      
      # Display the elpased time
      echo Time elapsed since the last vpn contact: $t_diff_min minutes, $t_diff_sec seconds
      
      if (( $t_diff_min >= $MAX_MINUTES_RESTART_PI ))
      then
          echo $t_now > /var/log/lastSuccessfulVpnContact
          /sbin/shutdown -r +$MINUTES_OF_WARNING_BEFORE_REBOOT
      fi
      
      if (( $t_diff_min >= $MAX_MINUTES_RESTART_VPN ))
      then
          /bin/systemctl restart openvpn@client.service
      fi
    path: /usr/local/bin/e16-vpncheck
    permissions: '0555'
    owner: 'root:root'
  - content: |
      #!/bin/bash
      
      if [ -z "$1" ]; then
      #    echo Host name prefix required
          exit
      fi
      
      OLD_HOST=`cat /etc/hostname`
      HOST_SN=`cat /proc/cpuinfo | grep Serial | cut -d ' ' -f 2 | sed s/^0*// |tr '[:lower:]' '[:upper:]'`
      HOST_NAME=$1-$HOST_SN
      
      if [ "$OLD_HOST" != "$HOST_NAME" ]; then
          sed s/e16/$HOST_NAME/ /etc/hostname > /tmp/hostname
          sed s/e16/$HOST_NAME/g /etc/hosts > /tmp/hosts
          hostname $HOST_NAME
          cp /tmp/hostname /etc/hostname
          rm /tmp/hostname
          chown root.root /etc/hostname
          cp /tmp/hosts /etc/hosts
          rm /tmp/hosts
          chown root.root /etc/hosts
      #else
      #    echo Hostname correct
      fi
    path: /usr/local/bin/e16-setup
    permissions: '0555'
    owner: 'root:root'
  - content: |
      # DO NOT EDIT THIS FILE - edit the master and reinstall.
      # (/tmp/crontab.c0HMAQ/crontab installed on Sat Nov 24 14:34:39 2018)
      # (Cron version -- $Id: crontab.c,v 2.13 1994/01/17 03:20:37 vixie Exp $)
      # Edit this file to introduce tasks to be run by cron.
      # 
      # Each task to run has to be defined through a single line
      # indicating with different fields when the task will be run
      # and what command to run for the task
      # 
      # To define the time you can provide concrete values for
      # minute (m), hour (h), day of month (dom), month (mon),
      # and day of week (dow) or use '*' in these fields (for 'any').# 
      # Notice that tasks will be started based on the cron's system
      # daemon's notion of time and timezones.
      # 
      # Output of the crontab jobs (including errors) is sent through
      # email to the user the crontab file belongs to (unless redirected).
      # 
      # For example, you can run a backup of all your user accounts
      # at 5 a.m every week with:
      # 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
      # 
      # For more information see the manual pages of crontab(5) and cron(8)
      # 
      # m h  dom mon dow   command
      * * * * * /usr/local/bin/e16-vpnping
      */20 * * * * /usr/local/bin/e16-vpncheck
    path: /var/spool/cron/crontabs/root
    permissions: '0600'
    owner: 'root:crontab'
